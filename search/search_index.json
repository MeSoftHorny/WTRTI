{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to WTRTI","text":"<p>A highly customizable HUD overlay and logging tool for War Thunder. </p> <p> PRO version HUD: </p> <p>Download PRO Version</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Cross-platform: Windows, Linux and macOS.</li> <li>VR support (SteamVR only). See VR section.</li> <li>Graphical indicators. PRO version.</li> <li>More than 30 types of indicators (Climb, AoA, Turning time, Fuel consumption, WEP timer, Booster remain, Critical Speed, Critical AoA etc.). Note: Weapon or Ammo information is not available (or very limited) in the web-map, so it cannot be added to the app.  </li> <li>Two types of OSD (On-screen display):  <ul> <li>WTRTI - Built-in OSD. See OSD Setup.  </li> <li>RTSS - using \"RivaTuner Statistics Server\" OSD functionality. See RTSS OSD Setup.  </li> </ul> </li> <li>Vehicle Information window, provides additional information (Speed Limits, Critical Overload, Critical AoA, etc).</li> <li>Custom indicators, allows you to make a new indicators with a specific reading properties from the game.</li> <li>Customizable \"Alert\" conditions, with a sound playback. See Alert.</li> <li>Lua scripts, for custom processing of indicator values.</li> <li>Plot window that provides real-time visualization of telemetry data on a graph.</li> <li>Logging of the flight data in a CSV file.</li> <li>Per-vehicle profile, with automatic loading at the beginning of a battle.</li> <li>Hotkey actions (e.g. Profile loading, OSD visibility, VR).</li> <li>Game chat window, with ability translate in-game chat messages by opening Google Translate web-page.</li> <li>Battle log window, with a keyword highlight of the battle events.</li> <li>DCS World support (Experimental), see DCS World Setup.</li> </ul>"},{"location":"#how-it-works","title":"How it works","text":"<p>This is not a mod. WTRTI does not make any changes to the game process or its data, it takes the game telemetry data (official API) and displays it on a screen (Overlay).</p>"},{"location":"#installation","title":"Installation","text":"<ol> <li>Download the latest version.</li> <li>Extract it to a separate folder with write permissions.  </li> </ol> <p>Warning</p> <p>Make sure it is not in the game root directory, otherwise the game launcher will delete the WTRTI executable.  </p> <p>Tip</p> <p>Since the program works in portable mode, all files (logs, profiles, etc.) that the program uses, will be located in the same folder as the executable file. As an exception on Mac, the config folder is located at: <code>~/Library/Application Support/WTRTI/</code> </p> <ol> <li>Start WTRTI.</li> <li>Add some indicators to the list (+ button).</li> <li>Start the game and switch to the \"Fullscreen Window\" mode in the Graphics settings.   <p>Note: If the overlay freezes/stutters, try disabling the \"Hardware Accelerated GPU Scheduling\" (HAGS). How-to </p> </li> <li>Go to \"Test Flight\".</li> </ol> <p>Tip</p> <p>Use Groups to change position or layout of indicators.  </p>"},{"location":"#upgrade-from-old-versions","title":"Upgrade from old versions","text":"<p>Simply extract the downloaded zip file into the folder where the old version is located.</p>"},{"location":"#system-requirements","title":"System requirements","text":"<ul> <li>Game: Full client+ <p>Note: \"Custom Battles\" or \"Custom Difficulty\" (Test Flight): Requires enabled \"Allow web UI\" option. Note: DEV Server or Minimal client users, see Troubleshooting for a workaround.  </p> </li> <li>OS: Windows: 7+. Linux: Ubuntu 20.04 and later. X11 only. The Overlay requires Compositor (eg. kwin, compiz). Recommended to use Gamescope(v3.11.0+) for better performance. See How-To. macOS: 11.0 and later. See <code>Docs/MACOS_README.txt</code> in the zip file.  </li> <li>Graphics:   Buit-in OSD: Any OpenGL 3.3 or DX11 compatible GPU. RTSS OSD: Rivatuner Statistics Server v7.3+. Download</li> <li>VR: SteamVR. See VR section for more info.</li> </ul>"},{"location":"features/","title":"Features","text":""},{"location":"features/#osd-setup","title":"OSD Setup","text":""},{"location":"features/#wtrti-built-in","title":"WTRTI (Built-in)","text":"<p>This type of OSD is enabled by default, if it is not, you can enable it at: Settings -&gt; OSD -&gt; OSD Type -&gt; WTRTI </p> <p>Start the game. In the graphics settings, switch to Fullscreen window mode.  </p> <p></p> <p>That's it. Go to the \"Test Flight\" for testing.  </p> <p>Tip</p> <p>To change the font, see Changing the fonts.  </p> <p>Warning</p> <p>Make sure that \"Hardware Accelerated GPU Scheduling\" (HAGS) is disabled. Otherwise, it can lead to stuttering when alt-tab to the game. How-to Note: If HAGS is disabled, the DLSS Framegen may not work.  </p>"},{"location":"features/#tooltips","title":"Tooltips","text":"<p>Most controls have tooltips. Simply hover over them and a tooltip will appear. </p>"},{"location":"features/#profiles","title":"Profiles","text":"<p>Profiles are located in the Profiles folder. A profile may contain: Groups, Colors, Indicators and VR options (optional). If you have downloaded a profile (.cfg file), place it in this folder and restart the application. You can then select it from the combo box below. </p> <p>If you want to create a new profile, click the Reset button (circle arrow) in the main window.  </p>"},{"location":"features/#vehicle-profiles","title":"Vehicle Profiles","text":"<p>The type of profiles that are saved with a vehicle name, e.g. bf-109f-4, mig_29_9_13, spitfire_mk1. To save a vehicle profile, go to Test Flight then ALT-TAB to the main window, and click on the Save button (floppy disk at the bottom).  </p>"},{"location":"features/#auto-loading-profiles","title":"Auto-loading profiles","text":"<p>This feature allows you to automatically load profiles when you start a battle or change vehicles. You can enable it at: Settings -&gt; General tab -&gt; Auto-load profiles </p> <p>Profiles have loading priorities: 1. Vehicle Profiles. 2. By a Type: Fighter, Strike, etc. 3. By a Propulsion: Prop, Jet. This means that if you have a vehicle profile, it will be loaded first, ignoring other types.  </p>"},{"location":"features/#hotkeys","title":"Hotkeys","text":"<p>Settings -&gt; Hotkeys tab</p> <p>Note: Hotkeys only work during a session.  </p> <p>You can use hotkeys to control OSD visibility, activate Benchmark Mode, or load profiles during a battle. </p> <p>Tip</p> <p>To rebind the key, click on the input field, press 'Delete', then press the desired key or 'Esc' to leave it empty.  </p>"},{"location":"features/#groups","title":"Groups","text":"<p>With groups, you can control how the indicators are displayed, their position and layout. </p> <p>Tip</p> <p>To quickly access this settings, double-click on a group (e.g. \"Main\") in the main window.  </p> <p>You can also move a group using keyboard.  Select a group in the main window, ALT-TAB to the game and press: SHIFT + ALT + ARROWS</p>"},{"location":"features/#setting-up-multiple-groups","title":"Setting up Multiple Groups","text":"<p>This feature allows you to configure multiple groups at the same time. Select multiple groups from the Groups list, make changes, and click Apply. Only the changed settings will be applied to other groups. You can also move multiple groups at once. If you change the position of the leading group (the last one selected), the leading group's offset (new - old pos) will be applied to the others.  </p>"},{"location":"features/#multi-value-layout","title":"Multi-value layout","text":"<p>This option allows you to change the layout of neighboring multi-value indicators.</p> <ul> <li>List:  ENGN1, ENGN2, ENGN3, RPM1, RPM2, RMP3, etc</li> <li>Shuffle:  ENGN1, RPM1, ENGN2, RPM2, ENGN3, RPM3, etc</li> </ul>"},{"location":"features/#colors-and-color-schemes","title":"Colors and Color Schemes","text":"<p>WTRTI works with color slots. You can Add, Delete and Set a color slots (maximum 32). </p> <p>By default, all indicators have the same color scheme (All). </p> <p>You can change the color for every part of an indicator: Name, Value, Units. If you want to set up colors for a specific indicator, enable the Separate Color scheme, then you can change the colors in the indicators settings. </p>"},{"location":"features/#indicators","title":"Indicators","text":"<p>Double-click on the indicator in the main window to open the indicator settings window.</p>"},{"location":"features/#general","title":"General","text":""},{"location":"features/#alert","title":"Alert","text":"<p>Alerts, allows you to specify a range of values within which you will be alerted visually (color change) or sound playback when the value exceeds the threshold.  </p> <p>For example, you need an alarm when you are at low altitude. Open the \"Altitude, m\" settings. Add a new alert condition by clicking the Add button in the Alert section. Then double-click on the new element. </p> <p>Specify the threshold value (e.g 200 meters) Note: Using &lt; sign means that this condition will only be triggered for values below 200. </p> <p>Choose a color and sound. </p> <p>Click on the OK button. This is it. Go to Test Flight for testing!  </p> <p>Note</p> <p>Multiple conditions are checked from top to bottom. Only the last matched condition will be triggered.  </p> <p>Tip</p> <p>\"min:sec\" indicators are set in seconds.  </p> <p>Tip</p> <p>For sound alerts, it's recommended that you use a 'relative paths' for audio files by selecting them from the WTRTI root directory, e.g. Sounds folder. This makes the profile more portable, so you can share it with others.</p> <p></p>"},{"location":"features/#advanced","title":"Advanced","text":""},{"location":"features/#in-state-list","title":"In \"State\" list","text":"<p>This option allows you to place the final value of the indicator, after all postprocessing, into the \"State\" list (press F2 in the main window). Enable the option and specify the key that will be in this list.</p> <p></p> <p>All In-State indicators are calculated in a separate order, from top to bottom, before Non-In-State indicators. The indicator with an in-state key that depends on another in-state indicator (chained), must be placed below that indicator in the main list, otherwise it will be N/A.  </p>"},{"location":"features/#logging-the-data-to-a-csv-file","title":"Logging the data to a CSV file","text":"<ol> <li>Go to Test Flight.</li> <li>Activate Benchmark mode with CTRL + ALT + B (by default).</li> <li>To start logging press X key.</li> <li>Press again X to stop.</li> </ol> <p>All these hotkeys you can rebind in the Settings -&gt; Hotkeys tab. You can change the logging interval in milliseconds, at Settings -&gt; General tab -&gt; Benchmark mode -&gt; Logging Interval Generated .CSV files are located in the Logs folder.  When importing to Excel, select \"Comma\" as Delimiter(Separator).  </p> <p>In the OSD, the benchmark information is positioned in the last group, so if you want to place it in a specific location, create an empty group and move it as you wish.  </p> <p> </p> <p>You can toggle <code>Logging</code> for a specific indicator in the Indicator's Settings, by default it's enabled. </p>"},{"location":"features/#game-chat","title":"Game Chat","text":"<p>Game chat - allows you to see, copy or translate messages of the in-game chat. You can enable the auto-logging feature, Game Chat -&gt; Settings -&gt; Logging, this will automatically write into a log file for every game session. Log files are located in the Logs folder. </p>"},{"location":"features/#battle-log","title":"Battle Log","text":"<p>Shows recorded battle events, with ability Logging to file. You can enable the auto-logging feature, Battle Log -&gt; Settings -&gt; Logging, this will automatically write into a log file for every game session. Log files are located in the Logs folder. </p>"},{"location":"features/#highlights","title":"Highlights","text":"<p>Located at Battle Log -&gt; Settings. Allows you to set a \"keywords\" to highlight certain words in battle log messages. </p>"},{"location":"features/#vehicle-information","title":"Vehicle Information","text":"<p>This window allows you to see some information about your current/selected vehicle.  </p> <p>Warning</p> <p>Please do not use it for bug reports!</p> <p></p> <p>You can also see this information in the overlay. All you need is to set up a hotkey at: Settings -&gt; Hotkeys tab -&gt; Vehicle Information -&gt; Show in OSD </p>"},{"location":"features/#vr","title":"VR","text":""},{"location":"features/#setup","title":"Setup","text":"<ol> <li>Start SteamVR.</li> <li>Ensure the Current OpenXR Runtime is SteamVR.</li> <li>Start WTRTI and enable VR mode (Settings -&gt; Advanced tab).</li> <li>Go to the \"Test Flight\".</li> <li>Resize the \"WTRTI OSD\" window to make indicators visible.</li> <li>Enable \"HMD Tracking\" with a hotkey (CTRL + ALT + V) or in the app VR Settings -&gt; Tracked device.</li> <li>Attach the overlay in space using hotkey CTRL + ALT + S.</li> </ol> <p>Tip</p> <p>Click on the VR button in the main window to display the VR Settings.</p> <p>Tip</p> <p>More features in the PRO version</p> <p>Warning</p> <p>If you have an iGPU, make sure you are using WTRTI on the discrete GPU (High performance): Windows Settings -&gt; System -&gt; Display -&gt; Graphics Settings -&gt; Choose WTRTI -&gt; Options -&gt; High performance.</p>"},{"location":"features/#hotkeys_1","title":"Hotkeys","text":"<ul> <li>CTRL + ALT + V - toggles \"HMD tracking\" mode.</li> <li>CTRL + ALT + Z - toggles \"Left controller tracking\" mode.</li> <li>CTRL + ALT + X - toggles \"Right controller tracking\" mode.</li> <li>CTRL + ALT + S - attaches the overlay in space (\"None\" tracking mode).</li> <li>SHIFT + ALT + R - resets the overlay position and rotation(x:0.0, y:0.0, z:-0.5).</li> <li>SHIFT + ALT + LEFT/RIGHT - moves the overlay along the X axis.</li> <li>SHIFT + ALT + UP/DOWN - moves the overlay along the Y axis.</li> <li>SHIFT + ALT + PAGE UP/PAGE DOWN - moves the overlay along the Z axis.</li> <li>SHIFT + ALT + Q - reduce overlay size.</li> <li>SHIFT + ALT + E - increase overlay size.</li> </ul>"},{"location":"features/#steamvr-controller-bindings-support","title":"SteamVR Controller Bindings support","text":"<p>Allows you to assign VR controller buttons to specific WTRTI actions. To make the settings available in SteamVR, you first need to go to \"Test Flight\" and then select WTRTI from the list of programs in the SteamVR Controller Bindings window.  </p>"},{"location":"features/#metaoculus-headsets","title":"Meta/Oculus headsets","text":"<p>Make sure that the Current OpenXR Runtime is SteamVR. It's also recommended to use Steam Link or ALVR for streaming instead of Meta Quest Link. </p>"},{"location":"features/#virtual-desktop-users","title":"Virtual Desktop users","text":"<p>Select \"SteamVR\" as the OpenXR Runtime (Options tab).</p>"},{"location":"features/#metaoculus-headsets-legacy","title":"Meta/Oculus headsets (Legacy)","text":"<p>To make the game run through SteamVR, you have to set the compatibility mode to Windows 7, for aces.exe in win32 and win64 folders. How-To: In the game root folder, open win32 folder and find aces.exe, open its Properties and set Compatibility mode to Windows 7: </p> <p>Do the same for aces.exe in the win64 folder. It is also recommended to run the game through Steam.  </p>"},{"location":"features/#advanced_1","title":"Advanced","text":""},{"location":"features/#rtss-osd-setup","title":"RTSS OSD Setup","text":"<ol> <li>Download and Install RTSS.</li> <li>Start WTRTI.</li> <li>Settings -&gt; OSD -&gt; OSD Type -&gt; RTSS </li> </ol> <p>Note</p> <p>By default RTSS has 2x \"On-Screen Display zoom\". If you do not change it to 1x, the position of a group in WTRTI will be magnified by 2. For example, 200,100 in config becomes 400,200 on screen.  </p> <p>Warning</p> <p>RTSS only works with text-based indicators. Also, RTSS only supports ASCII characters.</p> <p>To change the font, see Changing the fonts.</p>"},{"location":"features/#gamescope-setup-linux","title":"Gamescope Setup (Linux)","text":"<p>There are two ways to use gamescope:</p>"},{"location":"features/#create-a-script","title":"Create a script:","text":"<p><pre><code>#!/bin/bash\nexport PATH=$PATH:/path/to/WTRTI\n./launcher &amp;\nWTRTI\n</code></pre> Place it in the game root directory, where the launcher is, and run it with Gamescope: <code>gamescope ./run.sh</code></p>"},{"location":"features/#from-command-line","title":"From command line:","text":"<ol> <li>Start the game with Gamescope: <code>gamescope ./launcher</code></li> <li>Launch WTRTI from another command line: <code>GAMESCOPE_DISPLAY=:2 ./WTRTI</code></li> </ol> <p>Note</p> <p>GAMESCOPE_DISPLAY should be the name of the gamescope Xwayland server. When you start the game with gamescope, you can see what name gamescope uses. <code>wlserver: [xwayland/server.c:108] Starting Xwayland on :2</code></p> <p>Warning</p> <p>Before closing the game, close WTRTI first and then the game! Otherwise the app will crash and you may lose your configuration.  </p>"},{"location":"features/#fm-mode","title":"FM Mode","text":"<p>This mode contains additional indicators, that only works in \"Test Flight\":  </p> <ul> <li>Excess power, W</li> <li>Drag, kgf (lbf)</li> <li>Total mass, kg (lb)</li> <li>No fuel mass, kg (lb)</li> <li>Thrust to Weight ratio</li> <li>Critical G, % (in-battle approximate version)</li> </ul> <p>To make these indicators to work, follow these steps:  </p> <ol> <li>Open the game root folder. macOS: Go to Application folder -&gt; RMB on WarThunderLauncher -&gt; \"Show Package Contents\" -&gt; RMB on WarThunder -&gt; \"Show Package Contents\"</li> <li>Open config.blk file with text editor.</li> <li>Find <code>debug</code> section</li> <li>Emplace this line: <pre><code>enableFMCommands:b=yes\n</code></pre> </li> <li>Save the file and start the game.</li> <li>Start WTRTI and enable FM mode in Settings -&gt; Advanced.</li> </ol>"},{"location":"features/#custom-indicators","title":"Custom indicators","text":"<p>Open Add window (+ button) -&gt; New (or RMB on the indicators list). </p> <p>Use State window(press F2 in the main window) to see which parameters are available.  </p> <p>Warning</p> <p>Empty State Key - switches the indicator into \"label\" mode, which will only show OSD name and trigger an alerts.  </p> <p></p>"},{"location":"features/#multiple-values","title":"Multiple values","text":"<p>Replacing numbers in the State Key with <code>%d</code>, allows reading multiple parameters (e.g. multiple engines) with the same key. Examples: <code>RPM 1</code> -&gt; <code>RPM %d</code> <code>manifold_pressure1</code> -&gt; <code>manifold_pressure%d</code> </p>"},{"location":"features/#lua-script-option","title":"\"Lua-script\" option","text":"<p>Allows you write a custom value processing in Lua. Right after enabling this option and pressing OK, a template script will be created, you can find it at: <code>Indicators/&lt;NAME&gt;/update.lua</code> </p> <p>Also have a look at the Lua API to see all the functions that are available.  </p>"},{"location":"features/#osd-on-a-second-screen","title":"OSD on a second screen","text":"<p>Simply switch \"Window mode\" (Settings-&gt;OSD) to \"Windowed\" and move the \"WTRTI OSD\" window to a second screen. </p>"},{"location":"features/#receive-data-from-another-pc-or-console-on-the-local-network","title":"Receive data from another PC or Console on the local network","text":"<p>Set another PC's local IP address in Settings -&gt; Network -&gt; Address:</p> <p>Warning</p> <p>Leave <code>8111</code> port unchanged</p> <p></p>"},{"location":"features/#dcs-world-setup","title":"DCS World Setup","text":"<ol> <li>Copy the files from DCS folder (in the app root folder) into <code>%USERPROFILE%\\Saved Games\\DCS\\Scripts\\</code>    For Open Beta: <code>%USERPROFILE%\\Saved Games\\DCS.openbeta\\Scripts\\</code> </li> <li>Open the Scripts folder and rename Export.lua.inc -&gt; Export.lua <p>Note: If you already have Export.lua, simply copy the internals of Export.lua.inc into Export.lua.  </p> </li> <li>Start WTRTI, open Settings -&gt; Advanced tab -&gt; Enable \"TCP Listener\".  </li> <li>Start the game.  </li> </ol>"},{"location":"features/#multiplayer","title":"Multiplayer","text":""},{"location":"features/#hosted-server","title":"Hosted server","text":"<p>Check if the server has these options in the DCS World multiplayer lobby window:</p> <p></p>"},{"location":"features/#creating-a-server","title":"Creating a Server","text":"<p>Click on Advanced and enable these options:</p> <p></p>"},{"location":"features/#changing-the-fonts","title":"Changing the fonts","text":""},{"location":"features/#wtrti","title":"WTRTI","text":"<p>Tip</p> <p>You can use a custom font file. Simply place a TTF file into Fonts folder and select it in Settings.</p>"},{"location":"features/#rtss","title":"RTSS","text":"<p>Start RTSS and click on \"Raster 3D\" button. </p> <p>Tip</p> <p>Use monospace fonts for better layout.</p> <p>Tip</p> <p>In order to use custom font files, you will need to install them on your system.</p>"},{"location":"lua-api/","title":"Lua API","text":""},{"location":"lua-api/#general","title":"General","text":"<p>Template Script looks like this: <pre><code>---\n-- return: none\n--\nfunction init_proc()\n\nend\n\n---\n-- arguments: in_value:   \"State Key\" value\n--            value_idx:  multi-value index (0 - based)\n---\n-- return: first(number):   final value\n--         second(boolean): value is valid or not\n---\nfunction value_proc(in_value, value_idx)\n   local value = in_value\n\n   return value, true\nend\n\n---\n-- arguments: in_value:   number\n--            value_idx:  multi-value index (0 - based)\n---\n-- return: string\n---\n-- function value_str_proc(in_value, value_idx)\n--   local str = string.format(\"%.2f\", in_value)\n--\n--   return str\n-- end\n</code></pre></p> <p>The pipeline looks like this: \"State value\" -&gt; value_proc -&gt; value_str_proc</p> <p>The script file runs in a sandboxed environment, that includes a few standard libs: <pre><code>math\nstring\ntable\n</code></pre></p> <p>With some functions from the <code>base</code> library: <pre><code>assert\nerror\nipairs\npairs\nnext\nselect\ntonumber\ntostring\ntype\npcall\nxpcall\n</code></pre></p> <p>Each script can contain the following callback functions:  </p> Key\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Description <code>init_proc()</code> called once at a new Vehicle or when Script Options has been changed. <code>value_proc(state_value, value_idx)</code> called at every update, for each available value index (up to 8). <code>value_str_proc(value, precision)</code> called at every update, number -&gt; string. <p>Warning</p> <p>If the script fails, it will be silently kicked, and the value will be <code>N/A</code>. Check the <code>Logs/WTRTI.log</code> file for error messages.</p>"},{"location":"lua-api/#functions","title":"Functions","text":""},{"location":"lua-api/#getstatevaluestate_key_str-default_value","title":"getStateValue(state_key_str [, default_value])","text":"<p>Returns the state value, otherwise a <code>nil</code> if the key not found. or Returns <code>default_value</code> if specified.  </p> <p>Note: Press F2 in the main window to display the \"State\" window.</p> <p>Usage: </p> <p><pre><code>local rpm = getStateValue(\"RPM 1\")\nif rpm then\n    -- code\nend\n</code></pre> or</p> <p><code>local rpm = getStateValue(\"RPM 1\", 0)</code></p>"},{"location":"lua-api/#setstatevaluestate_key_str-value","title":"setStateValue(state_key_str, value)","text":"<p>Allows you to emplace the value into the \"State\" list.  </p> <p>Returns <code>true</code> if the state value has been emplaced, <code>false</code> if not.  </p> <p>Note: Only non-existent keys are allowed to be emplaced. Note: The key lifetime is only one frame (update).  </p> <p>Usage: <code>setStateValue(\"new_key\", 3.14)</code></p>"},{"location":"lua-api/#getvehicledataveh_key_str","title":"getVehicleData(veh_key_str)","text":"<p>Returns values from FM database. Usage: <code>local crit_spd = getVehicleData(\"crit_spd\")</code></p> Key\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Description <code>type</code> string, returns Vehicle's Type (fighter, bomber, helipoter, etc). <code>name</code> string, returns Vehicle's Name (yak3, bf-109_g6, etc). <code>empty_mass</code> number, returns Empty Mass, kg. <code>max_fuel_mass</code> number, returns Mass with max Fuel, kg. <code>crit_spd</code> number, returns Critical Air Speed, km/h. <code>crit_max_spd</code> number, returns Critical Air Speed at maximum Wing Sweep on Vehicles with Variable WingSpan. <code>crit_mach_spd</code> number, returns Critical Air Mach Speed. <code>crit_max_mach_spd</code> number, returns Critical Air Mach Speed on Vehicles with Variable WingSpan at maximum wing sweep. <code>crit_combat_flaps_spd</code> number, returns Critical Combat Flaps Speed, km/h. <code>crit_takeoff_flaps_spd</code> number, returns Critical Takeoff Flaps Speed, km/h. <code>crit_landing_flaps_spd</code> number, returns Critical Landing Flaps Speed, km/h. <code>crit_flaps_spd</code> array of numbers, returns Critical Flaps Speed, km/h. <code>[ pos1, spd1, pos2, spd2, ... ]</code> <code>crit_gear_spd</code> number, returns Critical Landing Gear Speed, km/h. <code>combat_flaps_pos</code> number [0, 1], Combat flaps position. <code>takeoff_flaps_pos</code> number [0, 1], Takeoff flaps position. <code>num_engines</code> number, Number of Engines. <code>max_nitro</code> number, amount of Nitro, kg. <code>nitro_consume</code> number, Nitro consumption, kg/s. <code>vne</code> array of numbers, returns Critical Air Speed, km/h. <code>[ pos, spd ]</code>  When Variable WingSpan: <code>[ pos1, spd1, pos2, spd2, ... ]</code> <code>vne_mach</code> array of numbers, returns Critical Air Speed, km/h. <code>[ pos, spd ]</code>  When Variable WingSpan: <code>[ pos1, spd1, pos2, spd2, ... ]</code> <code>crit_aoa</code> array of numbers, returns Critical AoA. <code>[ aoa_positive1, aoa_negative1, aoa_positive2, aoa_negative2, ... ]</code>  When Variable WingSpan: <code>[ wing_pos1, aoa_positive1, aoa_negative1,</code> <code>wing_pos2, aoa_positive2, aoa_negative2, ... ]</code> <code>crit_wing_overload</code> array of numbers, returns Critical Wing Overload (N). <code>[ positive_overload, negative_overload ]</code>  When Variable WingSpan: <code>[ wing_pos1, positive_overload1, negative_overload1,</code> <code>wing_pos2, positive_overload2, negative_overload2, ... ]</code> <code>rpm_range</code> array of numbers, returns RPM range. <code>[ min_rpm, max_rpm, crit_rpm ]</code>"},{"location":"lua-api/#getupdatetime","title":"getUpdateTime()","text":"<p>Returns the current update time in seconds.</p>"},{"location":"lua-api/#gettime","title":"getTime()","text":"<p>Returns the current time in seconds from the start of the application.</p>"},{"location":"lua-api/#script-options","title":"Script Options","text":"<p>Allows you to specify additional options for the custom indicator that will be displayed on the Script tab (GUI). In the script, declare a global table <code>__OPTIONS</code>, example:  </p> <pre><code>__OPTIONS = {\n   {\n      key  = \"option_key\", -- key to get/set value in the script\n      name = \"Sample Option\", -- name in GUI\n      type = \"boolean\", -- type of the option\n      value = true -- default value\n   },\n   {\n      key  = \"combo_option__key\",\n      name = \"Sample Combo\",\n      type = \"combo\",\n      options = { \"red\", \"blue\", \"green\" }\n      value = 2, -- default selected option (green)\n   },\n}\n</code></pre> <p>Note: When you set the options in GUI and click on the OK/Apply button the <code>init_proc</code> function will be called. Note: On the script \"Hot-Reload\" (F9), these options will be reseted to defaults.  </p>"},{"location":"lua-api/#types","title":"Types","text":"Type Value boolean true, false integer any natural number float real number string string radio integer, index of the <code>options</code>, begins from 0 combo integer, index of the <code>options</code>, begins from 0 hotkey none"},{"location":"lua-api/#functions_1","title":"Functions","text":""},{"location":"lua-api/#getoptionvaluekey_str-default_value","title":"getOptionValue(key_str [, default_value])","text":"<p>Returns the option value. Usage: <code>local opt1 = getOptionValue(\"option_key\")</code> </p> <p>or with default value:  </p> <p><code>local opt1 = getOptionValue(\"option_key\", \"Default String\")</code> </p>"},{"location":"lua-api/#setoptionvaluekey_str-value","title":"setOptionValue(key_str, value)","text":"<p>Allows to set a value for the option. Usage: <code>setOptionValue(\"option_key\", \"New String\")</code> </p> <p>Note: Only initial type of the value is allowed to set.  </p>"},{"location":"lua-api/#groups","title":"Groups","text":"<p>You can make a group of the options, simply add a name key to the table right before the options.  </p> <p><pre><code>__OPTIONS = {\n   name = \"Group1\"\n   {\n      key  = \"option_key\",\n      name = \"Sample Option\",\n      type = \"boolean\",\n      value = true\n   },\n   {\n      name = \"Group2\" -- group inside of the Group1\n      {\n         key  = \"option_key_2\",\n         name = \"Sample Option 2\",\n         type = \"boolean\",\n         value = true\n      },\n      {\n         key  = \"option_key_3\",\n         name = \"Sample Option 3\",\n         type = \"boolean\",\n         value = false\n      }\n   }\n}\n</code></pre> Maximum level of group depth is 2.  </p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#wtrti-doesnt-work-with-custom-battles-or-custom-difficulty-test-flight","title":"WTRTI doesn't work with \"Custom Battles\" or \"Custom Difficulty\" (Test Flight):","text":"<p>Make sure you enable the \"Allow web UI\" option in the custom settings. This option was added in the \"Hornet's Sting\" update (2.45).  </p>"},{"location":"troubleshooting/#radar-altitude-do-not-work","title":"Radar Altitude do not work","text":"<p>The value \u201cradio_altitude\u201d may be missing in telemetry on some aircraft, because the aircraft does not have a radar altitude or the value is displayed on a digital device (modern jets). The game just doesn't provide values from HMD or MFDs.  </p> <p>Before reporting a bug to me, check for the \"radio_altitude\" in the \"State\" window (press F2 in the main window) while you are in \"Test Flight\".  If this value is missing, then the problem is on the game side. </p>"},{"location":"troubleshooting/#fuel-consumption-indicators-do-not-work","title":"Fuel consumption indicators do not work","text":"<p>The value \u201cfuel\u201d may be missing in telemetry on some aircraft (e.g. some early Yak's, or modern jets).  </p> <p>Before reporting a bug to me, check for the \"fuel\" in the \"State\" window (press F2 in the main window) while you are in \"Test Flight\". If this value is missing, then the problem is on the game side. </p>"},{"location":"troubleshooting/#the-overlay-is-stutteringfreezing-or-data-is-not-updating-when-alt-tab-to-the-game","title":"The overlay is stuttering/freezing or Data is not updating when ALT-TAB to the game","text":"<p>Try to turn off the \"Hardware Accelerated GPU Scheduling\" (HAGS). How-To: https://obsproject.com/kb/hags Note: If HAGS is disabled, the DLSS Framegen may not work.  </p>"},{"location":"troubleshooting/#not-working-with-dev-server","title":"Not working with DEV server","text":"<p>WTRTI may not work if a vehicle does not have a cockpit or the game client is Minimal, causing some information to be missing in the game telemtry. As a workaround, you can try enabling \"Handle data in every game mode\" (Settings -&gt; Advanced tab).  </p> <p>Info</p> <p>Some indicators may not work due to the limited amount of data available in the telemetry, e.g. Critical AoA, Critical Air Speed.</p> <p>Warning</p> <p>At some point, the overlay may continue to be displayed when you are in the menu, in which case try disabling this option.</p>"},{"location":"troubleshooting/#osd-is-not-show-up-or-data-is-not-updated-in-the-main-window","title":"OSD is not show up or \"Data is not updated in the main window\"","text":"<p>If you have antivirus software, try adding an exclusion for WTRTI.</p>"},{"location":"troubleshooting/#rtss-osd-is-not-working","title":"RTSS OSD is not working","text":"<p>RTSS may conflict with other overlays, try disabling them first. If you running the game through Steam, try to disable Steam Overlay for War Thunder, just open Properties-&gt;General-&gt; Uncheck the \"Enable the Steam Overlay while in-game\".</p>"},{"location":"troubleshooting/#wtrti-osd-transparency-is-not-workingblack-rectangle","title":"WTRTI OSD: transparency is not working/black rectangle","text":"<p>First try to restart your PC. Windows: The Compositor on your system is not working properly. Can be a few things: - Graphics driver issue, try to reinstall. - Windows is corrupted (sfc /scannow). Linux: Ensure that the compositor is enabled (kwin, compiz, picom).</p>"},{"location":"troubleshooting/#flight-data-is-not-being-written-to-the-csv-file","title":"Flight data is not being written to the CSV file","text":"<p>Perhaps Antivirus restricts write access, try to add exclusion for WTRTI.</p>"}]}